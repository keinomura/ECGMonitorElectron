
@charset "UTF-8";
  /* CSS by Steven Estrella. http://www.stevenestrella.com */
  /* The .slider and .slidervertical classes are for the range inputs. 
  Set the z-index high so its on top. */
.slider, .slidervertical {position:absolute;left:0px;top:0px;overflow:visible;z-index:80;}
/* slidershell exists only
    to provide a positioning context for the range input and other elements.*/
.slidershell {border:0 none;position:relative;left:0px;top:0px;overflow:visible;}

/* .slidertrack is the visible track on which the user drags the thumb button. */
.slidertrack {border:3px outset #666;border-radius:20px;position:absolute;}

/* .sliderfill adds color (or a gradient as seen here) to the track as the user 
    drags the thumb. */
.sliderfill {border:3px solid #00767f;border-radius:20px;position:absolute;opacity:0.2;pointer-events:none;background:#00767f;background: linear-gradient(90deg,#005555,#006699);}

#sliderfill1 {background: linear-gradient(90deg,#68bd88,#068666);}
#sliderfill2 {background: linear-gradient(90deg,rgb(255, 131, 207),rgb(179, 0, 110));}
#sliderfill3 {background: linear-gradient(90deg,rgb(145, 214, 211),rgb(13, 142, 165));}
#sliderfill4 {background: linear-gradient(90deg,rgb(218, 221, 221),rgb(173, 175, 175));}


.sliderthumb {
  width:40px;
  height:40px;
  display:block;
  border:3px solid #333;
  border-radius: 50%;
  background-position:0px 0px;
  background-repeat: no-repeat;
  position:absolute;left:0px;top:0px;/*border:0 none;*/
  pointer-events:none;
}

#sliderthumb1 {background-color:green;}
#sliderthumb2 {background-color:rgb(206, 95, 114);}
#sliderthumb3 {background-color:rgb(8, 159, 185);}
#sliderthumb4 {background-color:rgb(172, 172, 172);}
#sliderthumb5 {background-color:#006699;}


/* .slidervalue can be styled as you see fit */
.slidervalue {width:40px;height:10px;line-height:23px;color:white;
font-family:helvetica,sans-serif;font-size:20px;
position:absolute;left:0px;top:0px;border:0 none;
padding:12px 0px 30px 3px;margin:0px;text-align:center;
pointer-events:none;
user-select: none;
}

/* First we have to make transparent all the default elements of the range input.
    We use color:transparent to eliminate the default tick marks in IE. */
.unitbox input[type=range] {
width:100%;height:100%;
-webkit-appearance:none;
margin:0px;padding:0px;border:0 none;
color:transparent;overflow:visible;
background:blue;
opacity: 0.01;
/* test mode: visible original range and thumb elements*/
/*opacity: 0.5;*/
}

input[type=range]:focus::-webkit-slider-runnable-track {background:transparent;border:transparent;}
input[type=range]:focus {outline: none;}

/* Make the thumbs the same size as your custom sliderthumb. 
    they will not be visible but they will be draggable.    */
/* thumb will not be visible cause of the set of 'input[type=range]'*/
input[type=range]::-webkit-slider-thumb {width:40px;height:40px;border-radius:50%;border:none;border-color:black; background-color:transparent;-webkit-appearance:none;cursor: pointer;display: block;}

/* we need a separate rule for when the range input is to be vertical */
input[type=range][orient=vertical]{
/*-webkit-appearance: slider-vertical; /* The CSS style of thumb dose not work with WebKit !!*/
transform: rotate(270deg);
/* Rotate at the center of the element*/
top: 60px; /* adjust rotation dif + the border thick of the slider track */
left: -60px; /* adjust rotation dif + the border thick of the thumb */
}

/* other rules you may need for page styling */
body {font-family:sans-serif;}
.slider2column, {width:100%;border:0 none !important;}
.unitbox, .sliderbox {width:100%;border:0 none !important;}

.sliderbox {
float: left;
width: 75px;
height: 200px;
}

.switchbox {
float: left;
width: 40px;
height: 200px;
padding: 5px 0px;
/*-webkit-appearance: none;*/
/*opacity: 0.9;*/

}
.switch {
padding: 1px;
width: 38px;
border: 4px;
}

input[type=button] {
  position: relative;
  margin: 1px;
  padding: 1px;
  background-color: green;
  border-radius: 7px;
  border-style:solid;
  border-width: 2px;
  border-color: rgb(43, 41, 41);
  text-align: center;
  font-style: normal;
  cursor: pointer;
  color: white;
  outline: 0;
  opacity: 0.4;
}

.controlerPanel input[type=button] {
  width: 35px;
  height: 25px;
}

.displayAndVol input[type=button] {
  top: 30px;
  left: 10px;
  width: 55px;
  height: 35px;
  font-size: 120%;
  }


#switchBtn1 { background-color: green;}
#switchBtn41, #switchBtn51 { background-color: gray;}

input[type=button]:hover {
  background-color: green;
  opacity: 0.7;
}

.bPmesureBox {
  position: relative;
  top: 150px;
  left: 20px;
  color: white;
}

#bPswitch {
  background-color: rgb(206, 95, 114);
  color: white;
  opacity: 1.0;
  box-shadow: black;
}

#bPswitch:hover {
  background-color: rgb(206, 95, 114);
  color: white;
  opacity: 0.7;
}

#bPswitch:active {
  background-color: rgb(211, 52, 78);
  color: white;
  transform: translateY(1px);
}